        -:    0:Source:src/graph/Graph.hpp
        -:    1:// src/graph/Graph.hpp
        -:    2:#pragma once
        -:    3:#include <vector>
        -:    4:#include <stdexcept>
        -:    5:
        -:    6:class Graph
        -:    7:{
        -:    8:public:
        -:    9:    Graph(int vertices);
        -:   10:    void addEdge(int src, int dest, int weight);
      37*:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
       37:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
_ZNK5Graph11getVerticesEv:
    #####:   11:    int getVertices() const { return V; }
------------------
        -:   12:    const std::vector<std::pair<int, int>> &getNeighbors(int v) const;
        -:   13:    std::vector<std::pair<int, std::pair<int, int>>> getEdges() const;
        -:   14:
        -:   15:private:
        -:   16:    int V;                                                 // Number of vertices
        -:   17:    std::vector<std::vector<std::pair<int, int>>> adjList; // Adjacency list
        -:   18:};
