        -:    0:Source:src/graph/Graph.cpp
        -:    1:// src/graph/Graph.cpp
        -:    2:#include "Graph.hpp"
        -:    3:
       51:    4:Graph::Graph(int vertices) : V(vertices), adjList(vertices) {}
        -:    5:
       69:    6:void Graph::addEdge(int src, int dest, int weight)
        -:    7:{
       69:    8:    if (src < 0 || src >= V || dest < 0 || dest >= V)
        -:    9:    {
        3:   10:        throw std::out_of_range("Vertex index out of range");
        -:   11:    }
       66:   12:    adjList[src].emplace_back(dest, weight);
       66:   13:}
        1:   14:std::vector<std::pair<int, std::pair<int, int>>> Graph::getEdges() const
        -:   15:{
        1:   16:    std::vector<std::pair<int, std::pair<int, int>>> edges;
        6:   17:    for (int i = 0; i < V; i++)
        -:   18:    {
        8:   19:        for (const auto &neighbor : adjList[i])
        -:   20:        {
        3:   21:            edges.emplace_back(i, std::make_pair(neighbor.first, neighbor.second));
        -:   22:        }
        -:   23:    }
        1:   24:    return edges;
    =====:   25:}
       83:   26:const std::vector<std::pair<int, int>> &Graph::getNeighbors(int v) const
        -:   27:{
       83:   28:    if (v < 0 || v >= V)
        -:   29:    {
        2:   30:        throw std::out_of_range("Vertex index out of range");
        -:   31:    }
       81:   32:    return adjList[v];
        -:   33:}
